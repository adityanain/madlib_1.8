---------------------------------------------------------------------------
-- Rules:
-- ------
-- 1) Any DB objects should be created w/o schema prefix,
--    since this file is executed in a separate schema context.
-- 2) There should be no DROP statements in this script, since
--    all objects created in the default schema will be cleaned-up outside.
---------------------------------------------------------------------------

---------------------------------------------------------------------------
-- regression
---------------------------------------------------------------------------
--
-- training
select svm_generate_reg_data('svm_train_data', 100, 5);
-- serial
select svm_regression('svm_train_data', 'regs', false, 'svm_dot');
-- parallel
select svm_regression('svm_train_data', 'regp', true, 'svm_dot');

--
-- predicting
create temp table svm_reg_test ( id int, ind float8[] );
insert into svm_reg_test (select id, ind from svm_train_data limit 20);
-- serial
select svm_predict_batch('svm_reg_test', 'ind', 'id', 'regs', 'svm_reg_output1', false);
-- parallel
select svm_predict_batch('svm_reg_test', 'ind', 'id', 'regp', 'svm_reg_output2', true);

---------------------------------------------------------------------------
-- classification
---------------------------------------------------------------------------
--
-- preparing data
select svm_generate_cls_data('svm_train_data', 100, 4);
select svm_generate_cls_data('svm_test_data', 20, 4);

--
-- training and testing serially
select svm_classification('svm_train_data', 'clss', false, 'svm_dot');
select svm_predict_batch('svm_test_data', 'ind', 'id', 'clss', 'svm_cls_output1', false);

-- To learn multiple support vector models, replace the above by
select svm_classification('svm_train_data', 'clsp', true, 'svm_dot');
select svm_drop_model('clsp');
select svm_classification('svm_train_data', 'clsp', true, 'svm_gaussian');
select svm_predict_batch('svm_test_data', 'ind', 'id', 'clsp', 'svm_cls_output2', true);

---------------------------------------------------------------------------
-- novelty detection
---------------------------------------------------------------------------
-- Example usage for novelty detection:
select svm_generate_nd_data('svm_train_data', 100, 4);
select * from svm_novelty_detection('svm_train_data', 'nds', false, 'svm_polynomial');
